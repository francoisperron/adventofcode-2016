 The first floor contains a promethium generator and a promethium-compatible microchip.
 The second floor contains a cobalt generator, a curium generator, a ruthenium generator, and a plutonium generator.
 The third floor contains a cobalt-compatible microchip, a curium-compatible microchip, a ruthenium-compatible microchip, and a plutonium-compatible microchip.
 The fourth floor contains nothing relevant.

 promethium = P
 cobalt = B
 curium = C
 ruthenium = R
 plutonium = L

 F4 .  .  .  .  .  .  .  .  .  .  .
 F3 .  .  .  .  BM .  CM .  RM .  LM
 F2 .  .  .  BG .  CG .  RG .  LG .
 F1 E  PG PM .  .  .  .  .  .  .  .

 possible moves:
 1. up 1
 2. up 2
 3. down 1
 4. down 2

 is floor valid:
 M avec son G || pas de G || not already visited*

 *: we dont want to go back to where we were, so if the element are exactly at the same place we already visited,
 * its not a valid move

 https://en.wikipedia.org/wiki/Breadth-first_search

Plan:
x1. represents the assembly floors
x2. apply a move to the assembly floors and check assembly
3. verify if its valid
4. verify if complete (all on fourth floor)
4. based on the assembly, determine next possible moves
5. remove possible moves which are invalid/already seen

6. Probably need to make assembly immutable instead of changing it
